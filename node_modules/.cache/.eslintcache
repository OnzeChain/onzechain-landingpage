[{"C:\\Github\\onzechain-landingpage\\src\\index.js":"1","C:\\Github\\onzechain-landingpage\\src\\pages\\App.js":"2","C:\\Github\\onzechain-landingpage\\src\\components\\navbar.js":"3","C:\\Github\\onzechain-landingpage\\src\\pages\\home.js":"4","C:\\Github\\onzechain-landingpage\\src\\pages\\faq.js":"5","C:\\Github\\onzechain-landingpage\\src\\pages\\terms-of-service.js":"6"},{"size":312,"mtime":1652773713026,"results":"7","hashOfConfig":"8"},{"size":544,"mtime":1653295648275,"results":"9","hashOfConfig":"8"},{"size":3300,"mtime":1652946485517,"results":"10","hashOfConfig":"8"},{"size":143,"mtime":1652701555267,"results":"11","hashOfConfig":"8"},{"size":1410,"mtime":1652777193634,"results":"12","hashOfConfig":"8"},{"size":6711,"mtime":1653296075254,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","suppressedMessages":"16","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1zsrme",{"filePath":"17","messages":"18","suppressedMessages":"19","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"20","messages":"21","suppressedMessages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23"},{"filePath":"24","messages":"25","suppressedMessages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","suppressedMessages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Github\\onzechain-landingpage\\src\\index.js",[],[],"C:\\Github\\onzechain-landingpage\\src\\pages\\App.js",["33"],[],"C:\\Github\\onzechain-landingpage\\src\\components\\navbar.js",["34","35"],[],"import * as React from \"react\";\r\nimport AppBar from \"@mui/material/AppBar\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Toolbar from \"@mui/material/Toolbar\";\r\nimport \"../style/home.css\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport Menu from \"@mui/material/Menu\";\r\nimport MenuIcon from \"@mui/icons-material/Menu\";\r\nimport Container from \"@mui/material/Container\";\r\nimport Button from \"@mui/material/Button\";\r\nimport MenuItem from \"@mui/material/MenuItem\";\r\n\r\nconst pages = [\r\n  <Button variant=\"inherit\" href=\"/about\">\r\n    <p className=\"navlinks\">about</p>\r\n  </Button>,\r\n  <Button variant=\"inherit\" href=\"/contact\">\r\n    <p className=\"navlinks\">contact</p>\r\n  </Button>,\r\n    <Button variant=\"inherit\" href=\"/contact\">\r\n    <p className=\"navlinks\">Test</p>\r\n  </Button>,\r\n];\r\n\r\nconst Navbar = () => {\r\n  const [anchorElNav, setAnchorElNav] = React.useState(null);\r\n  const [setAnchorElUser] = React.useState(null);\r\n\r\n  const handleOpenNavMenu = (event) => {\r\n    setAnchorElNav(event.currentTarget);\r\n  };\r\n  const handleOpenUserMenu = (event) => {\r\n    setAnchorElUser(event.currentTarget);\r\n  };\r\n\r\n  const handleCloseNavMenu = () => {\r\n    setAnchorElNav(null);\r\n  };\r\n\r\n  return (\r\n    <AppBar position=\"fixed\" style={{ background: \"#FFA500\" }}>\r\n      <Container maxWidth=\"xl\">\r\n        <Toolbar disableGutters>\r\n          <Box sx={{ flexGrow: 100 }}>\r\n            <a className=\"homelink\" href=\"/\">\r\n              <img\r\n                className=\"logo\"\r\n                src=\"https://i.postimg.cc/4xf8S5Mp/Onzechain-logo-2.png\"\r\n              ></img>\r\n            </a>\r\n          </Box>\r\n          <Box sx={{ flexGrow: 1, display: { xs: \"flex\", md: \"none\" } }}>\r\n            <IconButton\r\n              size=\"large\"\r\n              aria-controls=\"menu-appbar\"\r\n              aria-haspopup=\"true\"\r\n              onClick={handleOpenNavMenu}\r\n              color=\"inherit\"\r\n            >\r\n              <MenuIcon />\r\n            </IconButton>\r\n            <Menu\r\n              id=\"menu-appbar\"\r\n              anchorEl={anchorElNav}\r\n              anchorOrigin={{\r\n                vertical: \"bottom\",\r\n                horizontal: \"left\",\r\n              }}\r\n              keepMounted\r\n              transformOrigin={{\r\n                vertical: \"top\",\r\n                horizontal: \"left\",\r\n              }}\r\n              open={Boolean(anchorElNav)}\r\n              onClose={handleCloseNavMenu}\r\n              sx={{\r\n                display: { xs: \"block\", md: \"none\" },\r\n              }}\r\n            >\r\n              {pages.map((page) => (\r\n                <MenuItem key={page} onClick={handleCloseNavMenu}>\r\n                  <Typography textAlign=\"center\">{page}</Typography>\r\n                </MenuItem>\r\n              ))}\r\n            </Menu>\r\n          </Box>\r\n          <Box sx={{ flexGrow: 1, display: { xs: \"none\", md: \"flex\" } }}>\r\n            {pages.map((page) => (\r\n              <Button\r\n                key={page}\r\n                onClick={handleCloseNavMenu}\r\n                sx={{ my: 2, color: \"black\", display: \"block\" }}\r\n              >\r\n                {page}\r\n              </Button>\r\n            ))}\r\n          </Box>\r\n        </Toolbar>\r\n      </Container>\r\n    </AppBar>\r\n  );\r\n};\r\nexport default Navbar;\r\n","C:\\Github\\onzechain-landingpage\\src\\pages\\home.js",[],[],"C:\\Github\\onzechain-landingpage\\src\\pages\\faq.js",[],[],"C:\\Github\\onzechain-landingpage\\src\\pages\\terms-of-service.js",["36"],[],{"ruleId":"37","severity":1,"message":"38","line":5,"column":8,"nodeType":"39","messageId":"40","endLine":5,"endColumn":14},{"ruleId":"37","severity":1,"message":"41","line":33,"column":9,"nodeType":"39","messageId":"40","endLine":33,"endColumn":27},{"ruleId":"42","severity":1,"message":"43","line":47,"column":15,"nodeType":"44","endLine":50,"endColumn":16},{"ruleId":"37","severity":1,"message":"45","line":2,"column":15,"nodeType":"39","messageId":"40","endLine":2,"endColumn":21},"no-unused-vars","'Navbar' is defined but never used.","Identifier","unusedVar","'handleOpenUserMenu' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Button' is defined but never used."]